var documenterSearchIndex = {"docs":
[{"location":"umap/#UMAP-API","page":"UMAP API","title":"UMAP API","text":"","category":"section"},{"location":"decode/#Decoder-models-API","page":"Decoder models API","title":"Decoder models API","text":"","category":"section"},{"location":"plot/#Plotting-API","page":"Plotting API","title":"Plotting API","text":"","category":"section"},{"location":"plot/#Compute-optimal-time-ranges-to-plot","page":"Plotting API","title":"Compute optimal time ranges to plot","text":"","category":"section"},{"location":"plot/","page":"Plotting API","title":"Plotting API","text":"get_pumping_ranges","category":"page"},{"location":"plot/#CePNEMAnalysis.get_pumping_ranges","page":"Plotting API","title":"CePNEMAnalysis.get_pumping_ranges","text":"get_pumping_ranges(datasets::Vector{String}, P_ranges::Dict; rngs_valid::Vector{Int}=[1,2])\n\nComputes time ranges with the most pumping variance for each dataset.\n\nArguments:\n\ndatasets::Vector{String}: List of datasets to analyze\nP_ranges::Dict: Dictionary of pumping ranges for each dataset\nrngs_valid::Vector{Int} (optional, default [1,2]): List of time ranges to consider\n\n\n\n\n\n","category":"function"},{"location":"data/#Data-IO-API","page":"Data IO API","title":"Data IO API","text":"","category":"section"},{"location":"data/#Data-loading","page":"Data IO API","title":"Data loading","text":"","category":"section"},{"location":"data/","page":"Data IO API","title":"Data IO API","text":"load_CePNEM_output\nadd_to_analysis_dict!\nneuropal_data_to_dict","category":"page"},{"location":"data/#CePNEMAnalysis.load_CePNEM_output","page":"Data IO API","title":"CePNEMAnalysis.load_CePNEM_output","text":"load_CePNEM_output(\n    datasets::Vector{String}, fit_ranges::Dict, path_output, path_h5, n_params, \n    n_particles, n_samples, is_mcmc; load_posterior::Bool=true\n)\n\nLoads CePNEM output data.\n\nArguments:\n\ndatasets::Vector{String}: Datasets to load\nfit_ranges: Dictionary of fit ranges for each dataset\npath_output: Path to Gen output. Data must be stored in path_output/dataset/rng1torng2/h5/neuron.h5\npath_h5: Path to H5 file for the dataset, which must be stored in dataset-data.h5 in this directory.\nn_params: Number of parameters in the Gen model\nn_particles: Number of particles in the Gen fit\nn_samples: Number of samples from the posterior given by the Gen fit\nis_mcmc: Whether fits are done via MCMC (as opposed to SMC)\nload_posterior (optional, default true): Whether to load the posterior samples. If false, only the fit ranges and traces are loaded.\n\n\n\n\n\n","category":"function"},{"location":"data/#CePNEMAnalysis.add_to_analysis_dict!","page":"Data IO API","title":"CePNEMAnalysis.add_to_analysis_dict!","text":"add_to_analysis_dict!(analysis_dict::Dict, new_dict::Dict, key::String)\n\nAdds a dictionary of new results to an existing analysis dictionary.\n\nArguments:\n\nanalysis_dict::Dict: Dictionary of CePNEM analysis results\nnew_dict::Dict: Dictionary of new results to add\nkey::String: Key in analysis_dict to add new results to\n\n\n\n\n\n","category":"function"},{"location":"data/#CePNEMAnalysis.neuropal_data_to_dict","page":"Data IO API","title":"CePNEMAnalysis.neuropal_data_to_dict","text":"neuropal_data_to_dict(\n    fit_results::Dict, analysis_dict::Dict, \n    list_class::Vector, list_match_dict::Vector, datasets_neuropal::Vector{String}\n)\n\nComputes match and encoding-change match dictionaries for NeuroPAL data.\n\nArguments:\n\nfit_results::Dict}: Dictionary of CePNEM fit results.\nanalysis_dict::Dict: Dictionary of CePNEM analysis results.\nlist_class::Vector{Any}: List of classes to match.\nlist_match_dict::Vector{Any}: List of dictionaries of matches for each class.\ndatasets_neuropal::Vector{String}: List of datasets to match.\n\n\n\n\n\n","category":"function"},{"location":"data/#Export-datasets-to-WormWideWeb-compatible-format","page":"Data IO API","title":"Export datasets to WormWideWeb-compatible format","text":"","category":"section"},{"location":"data/","page":"Data IO API","title":"Data IO API","text":"export_to_json","category":"page"},{"location":"data/#CePNEMAnalysis.export_to_json","page":"Data IO API","title":"CePNEMAnalysis.export_to_json","text":"export_to_json(\n    fit_results::Dict, analysis_dict::Dict, relative_encoding_strength::Dict, \n    datasets::Vector{String}, path_output::String, path_h5::String, list_uid_neuropal::Vector{String}\n)\n\nExports CePNEM analysis results to JSON file for use on the website.\n\nArguments:\n\nfit_results::Dict: Dictionary of CePNEM fit results.\nanalysis_dict::Dict: Dictionary of CePNEM analysis results.\nrelative_encoding_strength::Dict: Dictionary of relative encoding strength values for each neuron.\ndatasets::Vector{String}: List of datasets to export.\npath_output::String: Name of JSON file to export to.\npath_h5::String: Path to HDF5 directory containing raw data.\nlist_uid_neuropal::Vector{String}: List of NeuroPAL datasets.\n\n\n\n\n\n","category":"function"},{"location":"encodingmetrics/#Encoding-metrics-API","page":"Encoding metrics API","title":"Encoding metrics API","text":"","category":"section"},{"location":"encodingmetrics/","page":"Encoding metrics API","title":"Encoding metrics API","text":"compute_signal","category":"page"},{"location":"encodingmetrics/#CePNEMAnalysis.compute_signal","page":"Encoding metrics API","title":"CePNEMAnalysis.compute_signal","text":"compute_signal(fit_results::Dict)\n\nComputes signal value for each neuron in each dataset.\n\nArguments:\n\nfit_results::Dict: Dictionary of CePNEM fit results.\n\n\n\n\n\n","category":"function"},{"location":"encodingchange/#Encoding-change-detection-API","page":"Encoding change detection API","title":"Encoding change detection API","text":"","category":"section"},{"location":"encoding/#Encoding-categorization-API","page":"Encoding categorization API","title":"Encoding categorization API","text":"","category":"section"},{"location":"#CePNEMAnalysis.jl-Documentation","page":"CePNEMAnalysis.jl Documentation","title":"CePNEMAnalysis.jl Documentation","text":"","category":"section"},{"location":"","page":"CePNEMAnalysis.jl Documentation","title":"CePNEMAnalysis.jl Documentation","text":"The CePNEMAnalysis.jl package provides a collection of functions for interpreting and visualizing CePNEM model fits.","category":"page"},{"location":"","page":"CePNEMAnalysis.jl Documentation","title":"CePNEMAnalysis.jl Documentation","text":"Pages = [\"data.md\", \"encoding.md\", \"encodingchange.md\", \"encodingmetrics.md\", \"umap.md\", \"decode.md\", \"plot.md\", \"validation.md\"]","category":"page"}]
}
